# -*- coding: utf-8 -*-
"""prob_1_3DRGB_AHE.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Bu85-r0KU8nB9hROh2jJXvUq6tqXwRRB
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt
import os

"""using the glob library to recursively find all the images"""

def cum_def_fun(img):
    cdf = []
    for i in  range(255):
        cdf.append((((np.shape((np.where(img<=i))))[1])/img.size))
    return cdf

def hist_eq(img):
    
    eq_img = np.copy(img)
    for i in  range(255):
        eq_img[np.where(img==i)] = np.floor((((np.shape((np.where(img<=i))))[1])/img.size)*(np.max(img)-np.min(img)))
    return eq_img

def adap_hist_eq(img, factor): 
    output = np.copy(img)
    AHE_img = np.copy(img)
    m = int((AHE_img.shape[0])/factor)
    n = int((AHE_img.shape[1])/factor-1)
    # a 8X8 channel for equalization
    for i in range(0,AHE_img.shape[0],m):
        for j in range(0, AHE_img.shape[1], n):
            output[i:i+m,j:j+n,:] = hist_eq(AHE_img[i:i+m,j:j+n,:])
            output[i:i+m+20,j:j+n,:] = hist_eq(AHE_img[i:i+m+20,j:j+n,:])
            
    return output

frames =[]
frame = cv2.imread('images/' + str(0) +'.png')
frames = sorted(os.listdir('images/'))
video_output = cv2.VideoWriter('AHE.avi',cv2.VideoWriter_fourcc(*'DIVX'), 5, (frame.shape[1],frame.shape[0]))

for i in range(25):
    
    image_og = cv2.imread('images/' + str(i) +'.png')
    smooth_img = adap_hist_eq(image_og, 5)
    smooth_img = cv2.GaussianBlur(smooth_img,(3,3),0)
    video_output.write(smooth_img)
    # cv2.imshow('1',smooth_img)
    # cv2.waitKey()
    # cv2.destroyAllWindows()